darkkitchen.h
/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _DARKKITCHEN_H_RPCGEN
#define _DARKKITCHEN_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct cuisine {
	int idCuisine;
	char *nomCuisine;
	char *adresse;
	char *ville;
	int prix;
};
typedef struct cuisine cuisine;

struct formulaire {
	int idClient;
	char *nomClient;
	char *mail;
	char *tel;
	char *villeRes;
	char *nomResto;
	int nbResto;
	char *villeDest;
};
typedef struct formulaire formulaire;

struct justificatif {
	char *assurance;
	char *formations;
};
typedef struct justificatif justificatif;

struct client {
	struct formulaire formulaire;
	struct justificatif justificatif;
};
typedef struct client client;

struct formule {
	int idFormule;
	char *nomFormule;
	int nbCommandeMax;
	int prix;
};
typedef struct formule formule;

struct location {
	struct formule formule;
	date date;
	struct client client;
	struct cuisine cuisine;
};
typedef struct location location;

struct livraison {
	int idLivraison;
	char *nomTypeLivraison;
};
typedef struct livraison livraison;

typedef char *chaine;

typedef chaine listClients[5];

typedef chaine listCuisines[5];

typedef chaine listDemande[5];

typedef chaine listLocationEnCours[5];

typedef chaine listLivraison[5];

#define V1 0x23456789
#define cuisine_v1 1

#if defined(__STDC__) || defined(__cplusplus)
#define INIT 1
extern  void * init_1(void *, CLIENT *);
extern  void * init_1_svc(void *, struct svc_req *);
#define ajoutClient 2
extern  void * ajoutclient_1(formulaire *, CLIENT *);
extern  void * ajoutclient_1_svc(formulaire *, struct svc_req *);
#define modifierClient 3
extern  int * modifierclient_1(client *, CLIENT *);
extern  int * modifierclient_1_svc(client *, struct svc_req *);
#define modifierJustificatif 4
extern  int * modifierjustificatif_1(justificatif *, CLIENT *);
extern  int * modifierjustificatif_1_svc(justificatif *, struct svc_req *);
#define ajoutCuisine 5
extern  void * ajoutcuisine_1(cuisine *, CLIENT *);
extern  void * ajoutcuisine_1_svc(cuisine *, struct svc_req *);
#define modifierCuisine 6
extern  int * modifiercuisine_1(cuisine *, CLIENT *);
extern  int * modifiercuisine_1_svc(cuisine *, struct svc_req *);
#define initFormule 7
extern  void * initformule_1(formule *, CLIENT *);
extern  void * initformule_1_svc(formule *, struct svc_req *);
#define modifierFormule 8
extern  int * modifierformule_1(formule *, CLIENT *);
extern  int * modifierformule_1_svc(formule *, struct svc_req *);
#define analyseDemande 9
extern  int * analysedemande_1(formulaire *, CLIENT *);
extern  int * analysedemande_1_svc(formulaire *, struct svc_req *);
#define statusDemande 10
extern  char ** statusdemande_1(void *, CLIENT *);
extern  char ** statusdemande_1_svc(void *, struct svc_req *);
#define ajoutLocation 11
extern  int * ajoutlocation_1(location *, CLIENT *);
extern  int * ajoutlocation_1_svc(location *, struct svc_req *);
#define delLocation 12
extern  int * dellocation_1(location *, CLIENT *);
extern  int * dellocation_1_svc(location *, struct svc_req *);
#define infoCuisine 13
extern  char ** infocuisine_1(cuisine *, CLIENT *);
extern  char ** infocuisine_1_svc(cuisine *, struct svc_req *);
#define infoFormule 14
extern  char ** infoformule_1(formule *, CLIENT *);
extern  char ** infoformule_1_svc(formule *, struct svc_req *);
#define initTypeLivraison 15
extern  void * inittypelivraison_1(livraison *, CLIENT *);
extern  void * inittypelivraison_1_svc(livraison *, struct svc_req *);
#define infoLivraison 16
extern  char ** infolivraison_1(livraison *, CLIENT *);
extern  char ** infolivraison_1_svc(livraison *, struct svc_req *);
#define selectionTypeLivraison 17
extern  int * selectiontypelivraison_1(livraison *, CLIENT *);
extern  int * selectiontypelivraison_1_svc(livraison *, struct svc_req *);
extern int v1_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define INIT 1
extern  void * init_1();
extern  void * init_1_svc();
#define ajoutClient 2
extern  void * ajoutclient_1();
extern  void * ajoutclient_1_svc();
#define modifierClient 3
extern  int * modifierclient_1();
extern  int * modifierclient_1_svc();
#define modifierJustificatif 4
extern  int * modifierjustificatif_1();
extern  int * modifierjustificatif_1_svc();
#define ajoutCuisine 5
extern  void * ajoutcuisine_1();
extern  void * ajoutcuisine_1_svc();
#define modifierCuisine 6
extern  int * modifiercuisine_1();
extern  int * modifiercuisine_1_svc();
#define initFormule 7
extern  void * initformule_1();
extern  void * initformule_1_svc();
#define modifierFormule 8
extern  int * modifierformule_1();
extern  int * modifierformule_1_svc();
#define analyseDemande 9
extern  int * analysedemande_1();
extern  int * analysedemande_1_svc();
#define statusDemande 10
extern  char ** statusdemande_1();
extern  char ** statusdemande_1_svc();
#define ajoutLocation 11
extern  int * ajoutlocation_1();
extern  int * ajoutlocation_1_svc();
#define delLocation 12
extern  int * dellocation_1();
extern  int * dellocation_1_svc();
#define infoCuisine 13
extern  char ** infocuisine_1();
extern  char ** infocuisine_1_svc();
#define infoFormule 14
extern  char ** infoformule_1();
extern  char ** infoformule_1_svc();
#define initTypeLivraison 15
extern  void * inittypelivraison_1();
extern  void * inittypelivraison_1_svc();
#define infoLivraison 16
extern  char ** infolivraison_1();
extern  char ** infolivraison_1_svc();
#define selectionTypeLivraison 17
extern  int * selectiontypelivraison_1();
extern  int * selectiontypelivraison_1_svc();
extern int v1_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_cuisine (XDR *, cuisine*);
extern  bool_t xdr_formulaire (XDR *, formulaire*);
extern  bool_t xdr_justificatif (XDR *, justificatif*);
extern  bool_t xdr_client (XDR *, client*);
extern  bool_t xdr_formule (XDR *, formule*);
extern  bool_t xdr_location (XDR *, location*);
extern  bool_t xdr_livraison (XDR *, livraison*);
extern  bool_t xdr_chaine (XDR *, chaine*);
extern  bool_t xdr_listClients (XDR *, listClients);
extern  bool_t xdr_listCuisines (XDR *, listCuisines);
extern  bool_t xdr_listDemande (XDR *, listDemande);
extern  bool_t xdr_listLocationEnCours (XDR *, listLocationEnCours);
extern  bool_t xdr_listLivraison (XDR *, listLivraison);

#else /* K&R C */
extern bool_t xdr_cuisine ();
extern bool_t xdr_formulaire ();
extern bool_t xdr_justificatif ();
extern bool_t xdr_client ();
extern bool_t xdr_formule ();
extern bool_t xdr_location ();
extern bool_t xdr_livraison ();
extern bool_t xdr_chaine ();
extern bool_t xdr_listClients ();
extern bool_t xdr_listCuisines ();
extern bool_t xdr_listDemande ();
extern bool_t xdr_listLocationEnCours ();
extern bool_t xdr_listLivraison ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_DARKKITCHEN_H_RPCGEN */
